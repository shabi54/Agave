<?php
final class field_select extends genericField implements fieldInterface {
	
	public function __construct() {
		global $agave;
		$this->agave = $agave;
	}
	public function __destruct() { }
	
	
	public function format($values, $fieldName) {
		if(array_key_exists($fieldName, $values)){
                        return $values[$fieldName];
                }
                else return null;
	}
	
	public function unformat($value) {
		return $value;
	}
	
	public function edit($element) {
		$attributes = $this->generateAttributes($element);
		$html = "<select name='".$this->generateName($element)."' $attributes >";
		if(isset($element['values'][0])) {
			$values = $element['values'];
			$default = isset($element['default']) ? $element['default'] : NULL;
			foreach($values as $value) {
				$selected = $value == $default ? "selected='selected'" : "";
				$html .= "<option value='".$value."' $selected >".$value."</option>";
			}
		}
		else {
			$values = $element['values'];
			$default = $element['default'];
			foreach($values as $key=>$value) {
				$selected = $value == $default ? "selected='selected'" : "";
				$html .= "<option value='".$value."' $selected >".$key."</option>";
			}			
		}
		$html .="</select>";
		return $html;
	}
	
	public function display($values, $settings) {
		$html = $values;
		
		return $html;
	}
	
	public function validate($values, $md) {
		return TRUE;
	}
	
	public function returnSettingsForm($settings) {
		$elements = array();
		$elements[] = array(
			'name'=>'values',
			'type'=>'text',
			'label'=>'Values',
			'help'=>"Enter a comma delimited string, such as 'A, B, C' or 'A:1, B:2' for keyed arrays.",
			'size'=>60,
			'default'=>(isset($settings['values'])) ? implode(",", $settings['values']) : NULL
		);

		return $elements;
	}
	
	public function saveSettingsFields($data) {
		$settings = array();
		
		//TODO add processing of values to take into account KEYNAME:VALUE
		$settings['values'] = explode(",", $data['values']);
		
		return $settings;		
	}
}
?>