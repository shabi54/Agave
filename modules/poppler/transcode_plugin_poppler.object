<?php
class transcode_plugin_poppler implements transcoder_plugin {
	
	public function __construct() {	}
	
	public function execute($settings, $input, $presetname){//$input is full file object, $settings is array of settings.
		
		global $agave;
		$fileman = $agave->load('fileManager');
		$time = time();
		
		if($settings['format']=='txt'){
			$shellscript = "#!/bin/sh
"/*."exec 2>&1"*/."
cd ".$fileman->realpath("public://")."
pdftotext ".$fileman->realpath($input->uri);
			if(isset($settings['enc'])){
				$shellscript .= " -enc ".$settings['enc'];
			}
			$shellscript .= " "."transcoder_output_".$time.".".$settings['format'];
			$filenames=array();
			$filenames[0] = "transcoder_output_".$time.".".$settings['format'];
		}
		
		//TODO: Turns out imagemagick does pdf to images, too, and more reliably.  Check it out. Dunno how to know how many output files without poppler's pdfinfo, though...
		if($settings['format']=="jpg"){
			$shellscript = "#!/bin/sh
"./*"exec 2>&1".*/"
cd ".$fileman->realpath("public://")."
pdfinfo ".$fileman->realpath("tmp://")."/".$input->filename;
			exec($shellscript, $out);
			foreach($out as $line){
				if(!(strpos($line,"Pages")===FALSE)){
					$numpages = (int)substr($line, 16); //TODO: This is a bad way of getting the number of pages; it relies too much upon output structure of pdfinfo's output.  Replace with more robust regexp method.
				}
			}
			$shellscript = "#!/bin/sh
"./*"exec 2>&1".*/"
cd ".$fileman->realpath("public://")."
pdfimages -j ".$fileman->realpath("tmp://")."/".$input->filename;  //TODO: Why does pdfimages not work properly on some pdfs?  Sometimes outputs mirrored files, sometimes outputs nothing.
			$shellscript .= " "."transcoder_output_".$time;
			$filenames=array();
			$k=0;
			while($k<$numpages){ //TODO: Does not support PDFs with over 999 pages.
				if($k<10){$filenames[] = "transcoder_output_".$time."-00".$k.".jpg"; $k+=1;}
				elseif($k<100){$filenames[] = "transcoder_output_".$time."-0".$k.".jpg"; $k+=1;}
				elseif($k<1000){$filenames[] = "transcoder_output_".$time."-".$k.".jpg"; $k+=1;}
			}
		}
		
		if($settings['format']=='html'){
			$shellscript = "#!/bin/sh
"."exec 2>&1"."
cd ".$fileman->realpath("public://")."
pdftohtml ";
			if(isset($settings['complex'])){ // Makes the output html really fancy and formatted.  Usually cool, sometimes terrible.
				$shellscript .= "-c ";
			}
			$shellscript .= $fileman->realpath("tmp://")."/".$input->filename;
			$shellscript .= " "."transcoder_output_".$time.".".$settings['format'];
			$filenames=array();
			$filenames[0] = "transcoder_output_".$time.".".$settings['format'];
			$filenames[1] = "transcoder_output_".$time."s.".$settings['format'];
			$filenames[2] = "transcoder_output_".$time."_ind.".$settings['format'];
		}
		
		passthru($shellscript, $return);
		
		$trans = $agave->load('transcoder');
		$newfiles = array();
		foreach($filenames as $filename){
			$parentKey = $input->fileKey;
			$newfiles[] = $trans->save_result($filename, $parentKey, $time, $presetname);
		}
		
		return $newfiles;
		
	}
        public function creationForm($formarr, $form_values, $step) {
            switch($step) {
                case 1:
	      		$formarr['fields']['outformat'] = array(
					'#name'=>'outformat',
					'#label'=>'Select the extension to which poppler-utils will convert pdfs:',
					'#type'=>'select',
					'#values'=>array('.txt','.html'),
					'#default'=>NULL,
		      		'#validation'=>'/^\.([A-Za-z0-9]+)$/',
					'#errormessage'=>'that is not legitimaaaaaate'
	      		);
                break;
                case 2:
                    switch($form_values['outformat']){
                            case '.txt':
                                    $formarr['fields']['encoding'] = array(
                                            '#name' => 'encoding',
                                                '#type' => 'select',
                                            '#label' => 'Select text encoding type for poppler utils to use:',
                                                '#values' => array('utf-8','UCS-2','ASCII7','Latin1','Symbol'),
                                            );
                            break;
                            case '.html':
                                    $formarr['fields']['complex'] = array(
                                            '#name' => 'complex',
                                                '#type' => 'select',
                                            '#label' => 'Render complex html page?',
                                                '#values' => array('yes','no'),
                                            );
                            break;
                    }
                    $formarr['fields']['laststep'] = array(
                            '#name' => 'laststep',
                                '#type' => 'hidden',
                                '#value' => 'true',
                    );
                break;
            }
            return $formarr;
        }

        public function saveForm($form, &$settings, &$acceptedextensions, &$targetextension) {
                $acceptedextensions = array('.pdf');
                $targetextension = $form->values['outformat'];
                $settings['format']=$form->values['outformat'];
                if(isset($form->values['encoding'])){
                        $settings['enc']= $form->values['encoding'];
                }
        }
}